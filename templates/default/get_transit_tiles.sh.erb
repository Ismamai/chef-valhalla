#!/bin/bash
set -e

# make sure only one is running at any time...
LOCK_FILE="<%= node[:valhalla][:lock_dir] %>/cut_transit_tiles.lock"
(set -C; : > ${LOCK_FILE}) 2> /dev/null
if [ $? != "0" ]; then
   echo "Lock file exists"
   exit 0
fi
trap 'rm $LOCK_FILE' EXIT 1 2 3

export PATH=$PATH:/usr/local/bin
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib

# TODO: for incremental updates we'll want to first get a copy of the previous stuff
if [ -f <%= node[:valhalla][:transit_dir] %>.tgz ]; then
  rm -rf <%= node[:valhalla][:transit_dir] %>_temp
  mkdir <%= node[:valhalla][:transit_dir] %>_temp
#  tar pxvf <%= node[:valhalla][:transit_dir] %>.tgz -C <%= node[:valhalla][:transit_dir] %>_temp
fi

# fetch the latest data
valhalla_build_transit <%= node[:valhalla][:config] %> <%= node[:valhalla][:transitland_url] %> 5000 <%= node[:valhalla][:transit_dir] %>_temp <%= node[:valhalla][:transitland_api_key] %> <%= node[:valhalla][:transitland_import_level] %>

# tar it up
tar pcf - -C <%= node[:valhalla][:transit_dir] %>_temp . | pigz -9 > <%= node[:valhalla][:transit_dir] %>_temp.tgz

# and move it into place
mv <%= node[:valhalla][:transit_dir] %>_temp.tgz <%= node[:valhalla][:transit_dir] %>.tgz

# only stop the current run if its in the middle of cutting tiles
# if its doing anyting else let it carry on
for p in $(pgrep valhalla_build); do kill ${p}; done
sleep 10
for p in $(pgrep valhalla_build); do kill -9 ${p}; done
sleep 10
